version: 2

models:
  - name: dim_listings_cleansed
    description: Cleansed table which contains Airbnb listings.
    columns:

      - name: listing_id
        description: Primary key for the listing
        tests:
          - unique
          - not_null

      - name: host_id
        description: The hosts's id. References the host table.
        tests:
          - not_null
          - relationships:
              to: ref('dim_hosts_cleansed')
              field: host_id

      - name: room_type
        description: Type of the apartment / room
        tests:
          - accepted_values:
              values: [ 'Entire home/apt', 'Private room', 'Shared room', 'Hotel room' ]

      - name: listing_id
        description: >
          The unique identifier for the listing, also make sure it is not null
        data_tests:
          - unique
          - not_null
      - name: host_id
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_hosts_cleansed')
              field: host_id

  - name: dim_host_cleansed
    description: This model is a cleaned version of the hosts table
    columns:
      - name: host_id
        description: The unique identifier for the host
        data_tests:
          - unique
          - not_null

      - name: host_name
        description: The name of the host
        data_tests:
          - not_null

      - name: host_since
        description: The date the host joined Airbnb
        data_tests:
          - not_null
          - relationships:
              to: ref('dim_listings_cleansed')
              field: host_id

      - name: is_superhost
        description: Defines whether the hosts is a superhost.
        data_tests:
          - accepted_values:
              values: [ 't', 'f' ]

  - name: dim_listings_w_hosts
    tests:
      - dbt_expectations.expect_table_row_count_to_equal_other_table:
          compare_model: source('airbnb', 'listings')
    columns:
      - name: price
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: numeric
          - dbt_expectations.expect_column_quantile_values_to_be_between:
              quantile: 0.99
              min_value: 100
              max_value: 800
          - dbt_expectations.expect_column_max_to_be_between:
              max_value: 5000
              config:
                severity: warn

  - name: dim_host_cleansed
    description: Cleansed table for airbnb hosts
    columns:
      - name: host_id
        description: Unique identifier for the host, also PK
        data_tests:
          - unique
          - not_null
  - name: mart_fullmoon_reviews
    description: The 'mart_fullmoon_reviews' model is a combination of the 'fact_reviews' and 'seed_full_moon_dates' tables from the AIRBNB.DEV schema. It includes all columns from the 'fact_reviews' table and adds a new column 'full_moon' which indicates whether the review was made on a full moon day or not. The 'full_moon' column is determined by joining the 'fact_reviews' table with the 'seed_full_moon_dates' table on the review date. If the review date matches with a full moon date, the 'full_moon' column is marked as 'full_moon', otherwise it is marked as 'not_full_moon'.
    columns:
      - name: review_id
        data_type: varchar
      - name: listing_id
        data_type: number
        tests:
          - not_null
      - name: review_date
        data_type: timestamp_ntz
        tests:
          - dbt_expectations.expect_row_values_to_have_recent_data:
              datepart: day
              interval: 90
          - relationships:
              field: REVIEW_DATE
      - name: reviewer_name
        data_type: varchar
      - name: review_text
        data_type: varchar
      - name: review_sentiment
        data_type: varchar
        tests:
          - accepted_values:
              values:
                - neutral
                - positive
                - negative
          - unique
      - name: full_moon
        data_type: varchar
